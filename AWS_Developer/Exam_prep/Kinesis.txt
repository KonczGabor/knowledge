Kinesis:
	Valós idejú adat(video, adat stream) gyűjtő, feldolgozó, transzformáló és analizáló(machine learning) service brutál sávszéllel, valós időben (on-the-fly).
	Store, encrypt, index data
	Serverless
	Csak FIFO
	Nem ingyenes, de csak annyit fizetünk amennnyit használjuk.
	Shard: Egyértelműen azonosított adatok sorozata(sequence) egy streamen. Gyakorlatilag az adatfolyam egy blokkja.
		Egy vagy több shard alkot egy stream-et
	Maximum Read:
		1MB/sec
	Maximum Write:
		2MB/sec		
	Partition key:
		Ez a kulcs határozza meg h mely adatok tartoznak egy shardba
	one mebibyte limit	
	These particular use cases all came from there's an Amazon frequently asked questions, document that talks about Kinesis versus SQS. 
	And these are some of the examples that they gave. So Kinesis give you FIFO order of data that is received, and if you want to maintain the order of log files, Kinesis is the way to go. 
	SQS FIFO could do it as well, now. Next up, ability for multiple applications to consume the same stream concurrently. 
	That is something you cannot do in SQS. You have one conusmer, it receives a message, visibility time-out triggers, and it's invisible to other applications. 
	With Kinesis you can have 2 consumers of the same data at the same time, so that's another good example. Also the ability to consume data many hours later. 
	Kinesis can store data so you can retrieve that later.
	

SQS és Kinesis közt az a különbség h Kinesis esetén garantált h a feldolgozó mindig ugyanaz az adott Consumer lesz.
Kinesis ugyanazt a producert tudja concurrent processzálni. SQS FIFO szerint a Visibility Timeout kizárólagosságot biztosít egy comsumer számára.

Kinesis Data Analytics:
	Analyze data streams with SQL.
	Realt time dashboard and metrics.	
	
	
	
Firehose:

	General aim: transformation (általában Lambda áll a háttérben) and provide batch output at near real time.
		
	Auto scale,
	
	Csak az átmenő adat után fizetünk.
			
	Hová írhat:
		S3
		Redshift
		OpenSearch
		
		3rd party
		
		HTTP endpoint
		
	Nem visszajátszható	
