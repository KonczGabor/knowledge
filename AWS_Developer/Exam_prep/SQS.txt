SQS:

	Nincs limit h mennyi üzenet lehet a csőben
	Nincs limit az áteresztőképességre (throughput) -ezt nem tudom mit akar jelenteni pontosan 
	Simple Queue Service
		manged
		Queue: Items Awaiting Attention
		Secure
		Scalable
		Durable (Replicated between multiple servers)
		
		Delivery Types:
			Standard: 
				Garantálja h Legalább egyszer mergérkezik, néha több másolat is létrejöhet belőle.
				A Sorrend nem garantált
				"Unlimited" átfolyás
			
			FIFO:
				Batchelve 3,000MPS
					Anélkül 300
				Garantálja h Biztosan csak egyszer lesz feldolgozva
				A sorrend szigorúan tartott.
				A queue neve csak .fifo-ra végződhet.
				
			Mindkettőt lehet titkosítani MKS-sel.	
				
		Dead Letter Queue: 
			Azon üzenetek sora, amiket addott próbálkozás szám szerint senki sem tudott feldolgozni
			Debuggolásnál hasznos.
		
		Visibility Timeout:
			Akkor kezdődik, amikor az előző message-t kivettük(Pull strategy) a sorból.
			A Consumernek kell processzálnia és törölni a Timeout időablakon belül.
			Ha nem törli ki, akkor újra ő lesz az aktuális.
			A Consumer extendálhatja az időablakot, ha még midnig processzál.
			Ha egy Consumer egy adott időablakon belül nem tudja feldolgozni(nem muszáj) és törölni, akkor egy másik Consumer még elérheti.
			Alapból 30 másodperc. 
				Range: 0 sec - 12 h.
			
		Messange Retention period (Meddig maradnak élve az üzenetek a q-ban)
			Min 1 min
			Def 4 days
			Max 14 days	
	
		Message size:
			Min 1KB
			Def 256KB
			Max 256KB
				Ha ennél is nagyobbat szeretnénk (max 2 GB) akkor használni kell az Amazon SQS Extended Client Library for Java -t.
					Ezzel S3 -ba kerül a message és egy referenciát passzolunk át a róla a Messageg-ben. 
		
		FIFO q ban nincs üzenet késleltetsésére opció. Simple-ben 15 perc a max.	
			
		Szerver oldali tikosítás elérhető, az üzenet tartalmát igen, a metadatát(TimeStamp, QueueName, Id) nem tikosítja. //Kínában a messagebody-t sem LoL!!!	
		
		5 perc, mire a metrikák aktualizálódnak a CloudWatch-ban.
		
		Lehetnek duplikált messagek
		
		A Consumer pullol, majd meghívja a queue api ján a delete-t.
		
		Valud usecase, ha elekezdenek a sorban felgyülemleni az uzenetek, akkor egy CloudWatchMetric ami figyeli sor hosszát, ami triggerel egy CloudWatch Alarmot, amit üzen egy AutoScalingGroupnak,
		hogy EC2 instancokat kérünk még. 
		
	
	Security:
		Encryption:
			In-flight: HTTPS API
			At-rest: KMS
			Client side en/decryption
					
					
	Long Polling:
		
		Long polling in Amazon Simple Queue Service (SQS) is a feature that allows consumers of SQS messages to retrieve messages from a queue 
		with reduced cost and lower latency compared to short polling.

		In short polling, when a consumer requests messages from a queue, if there are no messages available, SQS returns an empty response immediately. 
		This can lead to increased costs and latency as the consumer might need to repeatedly poll the queue.

		On the other hand, long polling allows the consumer to request messages from the queue for a longer duration (up to a maximum of 20 seconds) before the request times out. If there are no messages available in the queue when the request is made, SQS will wait up to the specified duration for messages to become available. Once a message is available or the request times out, SQS returns the response to the consumer.

		Long polling helps reduce the number of empty responses, which can lead to cost savings and lower latency, especially in scenarios where message arrival rates are unpredictable or sporadic.				
		
		
		
FIFO q-nak FIFO a dead letter q-ja, standard q-nak standard a dead letter q-ja. It's a must.		
		
		
		
		
		
DeleteQueue - Deletes the queue specified by the QueueUrl, regardless of the queue's contents. When you delete a queue, any messages in the queue are no longer available.

When you delete a queue, the deletion process takes up to 60 seconds. Requests you send involving that queue during the 60 seconds might succeed. 
For example, a SendMessage request might succeed, but after 60 seconds the queue and the message you sent no longer exist.

When you delete a queue, you must wait at least 60 seconds before creating a queue with the same name.


PurgeQueue - Deletes the messages in a queue specified by the QueueURL parameter. When you use the PurgeQueue action, you can't retrieve any messages deleted from a queue. The queue however remains.		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
