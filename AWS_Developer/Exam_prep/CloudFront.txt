Content Delivery Network.
Minél közelebb kihelyezni a client-hez, csökkentve a Latency-t.
Annyi van, ahány Edge Location.


Amazon CloudFront is a web service that speeds up distribution of your static and dynamic web content, such as .html, .css, .js, and image files, to your users. 
CloudFront delivers your content through a worldwide network of data centers called edge locations.
When a user requests content that you're serving with CloudFront, the request is routed to the edge location that provides the lowest latency (time delay), 
so that content is delivered with the best possible performance.

You can configure a single CloudFront web distribution to serve different types of requests from multiple origins.


When you create a signer, the public key is with CloudFront and private key is used to sign a portion of URL - Each signer that you use to create CloudFront signed URLs or 
signed cookies must have a public–private key pair. 
The signer uses its private key to sign the URL or cookies, and CloudFront uses the public key to verify the signature.

When you create signed URLs or signed cookies, you use the private key from the signer’s key pair to sign a portion of the URL or the cookie. 
When someone requests a restricted file, CloudFront compares the signature in the URL or cookie with the unsigned URL or cookie, to verify that it hasn’t been tampered with. 
CloudFront also verifies that the URL or cookie is valid, meaning, for example, that the expiration date and time haven’t passed.

When you use the root user to manage CloudFront key pairs, you can only have up to two active CloudFront key pairs per AWS account 
	- When you use the root user to manage CloudFront key pairs, you can only have up to two active CloudFront key pairs per AWS account.

	Whereas, with CloudFront key groups, you can associate a higher number of public keys with your CloudFront distribution, giving you more flexibility in how you use and manage the public keys. 
	By default, you can associate up to four key groups with a single distribution, and you can have up to five public keys in a key group.

AZ EL-ek és az AWS resourceok (S3 pl) a kapcsolat Private AWS

	• Az Origin az Eredeti forrás, amit kitolunk az Edgekre (Los Angeles, Mumbai, ..)
	
	
	• CloudFront vs S3 Cross Region Replication 
		
		Cloud Front:
			‣ Global Edge newtork
			‣ Van a fileoknak egy TTL-ük.
			‣ Első sorban statikus tartalmakra jó
			
		S3 Cross Region Replication:
			‣ Nekünk kell felállítani minden egyes Regiót
			‣ Gyakorlatilag valós idejü update
			‣ Read only!
			‣ Első sorban dinamikus tartalmak azonnali frissítésére szolgál pár Regióban.
			
				
				
	• Cache Key:
		A unique identifier for every object in the cache
			By default, consists of hostname + resource portion of the URL
			
			You can add other elements (HTTP headers, cookies, query strings) to the Cache Key using CloudFront Cache Policies
	
			Alapból nem kerülnek forwardolásra, de whitelist-re lehet őket tenni. Vagy vica-versa (include-all: except) => worst performance
				‣ Header-ök, 
				‣ Querry stringek
				‣ Cookiek
			
			Viszont hozzáadhatunk saját(custom) és gyári(CloudFront HTTP) headeröket


	• Cache Invalidation:
		Attól mert még az Origin-t updateljük, az Endpointok nem fognak tudni róla, míg le nem járnak a cachben a TTL-ek.
		
		Viszont manuálisan is ki lehet kényszeríteni:
			‣ Részleges: special path (/images/*)
			‣ Teljes	
	
	
	• CloudFront Signed URL / Signed Cookies
	
		‣ Signed URL = access to individual files (one signed URL per file)
		‣ Signed Cookies = access to multiple files (one signed cookie for many files)
		
		Signed URLs take precedence over signed cookies. If you use both signed URLs and signed cookies to control access to the same files and a viewer uses a signed URL to request a file, 
		CloudFront determines whether to return the file to the viewer based only on the signed URL.
		
		Attach Policy:
			‣ Includes URL expiration
			‣ Includes IP ranges to access the data from
			‣ Trusted signers (which AWS accounts can create signed URLs)
	
	
	• CloudFront Signed URL vs S3 Pre-Signed URL
	
		CloudFront Signed URL:
			‣ Allow access to a path, no matter the origin
			‣ Account wide key-pair, only the root can manage it!
			‣ Can filter by IP, path, date, expiration
			‣ Can leverage caching features
	
	
		S3 Pre-Signed URL:
			‣ Issue a request as the person who pre-signed the URL
			‣ Uses the IAM key of the signing principal
			‣ Limited lifetime
	
	
	•  CloudFront Signed URL Process
		Two types of signers:
			‣ Trusted key group (recommended)
				Can leverage APIs to create and rotate keys (and IAM for API security)
			‣ AWS Account that contains a CloudFront Key Pair
					- Need to manage keys using the root account and the AWS console
					- Not recommended because you shouldn’t use the root account for this
			

	• You generate your own public / private key
		‣ The private key is used by your applications (e.g. EC2) to sign URLs
		‣ The public key (uploaded) is used by CloudFront to verify URLs
		
	
	• A regiókat lehet szűkíteni cost effectiveness szempontjából
		‣ All (legdrágább)
		‣ 200
		‣ 100 (leogolcsóbb)
	
	
	• Content type alapján különböző Originekhez tudunk irányítani (Multiple Origin)
		CloudFronthoz beesik a hívás és megnézi az url-t:
			Ha /api/*  => megy az ALB-hez a backendért
			Ha /*      => megy az S3-hoz a frontendért  
	
	
	• Field Level Encryption:
		Már az Edge Location-re kiteszünk public key-eket, amik sensitive információkat (fieldeket) eltitkosítanak, és csak backenden fordítjuk vissza a private key-jel.
	
	• HTTPS kapcsolatot ki tudunk eszközölni a Client és a CloudFront, illetve a CloudFront és Backend között is.
	
	
	
	
When you use the root user to manage CloudFront key pairs, you can only have up to two active CloudFront key pairs per AWS account.

Whereas, with CloudFront key groups, you can associate a higher number of public keys with your CloudFront distribution, giving you more flexibility in how you use and manage the public keys.
By default, you can associate up to four key groups with a single distribution, and you can have up to five public keys in a key group.	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
