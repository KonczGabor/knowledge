AWS Step Functions is a serverless function orchestrator that makes it easy to sequence AWS Lambda functions and multiple AWS services into business-critical applications. 
Through its visual interface, you can create and run a series of checkpointed and event-driven workflows that maintain the application state. 
The output of one step acts as an input to the next. Each step in your application executes in order, as defined by your business logic.

AWS Step Functions enables you to implement a business process as a series of steps that make up a workflow. The individual steps in the workflow can invoke a Lambda function or a container that has some business logic, update a database such as DynamoDB or publish a message to a queue once that step or the entire workflow completes execution.

Benefits of Step Functions:
	Build and update apps quickly: AWS Step Functions lets you build visual workflows that enable the fast translation of business requirements into technical requirements. 
	You can build applications in a matter of minutes, and when needs change, you can swap or reorganize components without customizing any code.

	Improve resiliency: AWS Step Functions manages state, checkpoints and restarts for you to make sure that your application executes in order and as expected. 
	Built-in try/catch, retry and rollback capabilities deal with errors and exceptions automatically.

	Write less code: AWS Step Functions manages the logic of your application for you and implements basic primitives such as branching, parallel execution, and timeouts. 
	This removes extra code that may be repeated in your microservices and functions.






 1 SateMachine to 1 Workflow
 	Worklow can be:
 		Order fulfillement
 		Data processing
 		Web application
 		
 	Written in JSON
 	
 	Visualized workflow
 	
 	Nem csak a Consolról lehet elindítani hanem:
 		SDK
 		API GateWay
 		EventBridge
 		CloudWatch Event
 		
 	Meg tud hívni:
 		Lambda
 		Batch
 		ECS
 		DynamoDB
 		SNS
 		SQ
 		Egy másik Step Function
 		
 	ASL (Amazon State Language) to define worfklow
 	
 Consolon 3 nagy tab-ja van
 	Design
 	Code
 	Config	
 	
 	Minden errort magában a StepFunction-ben kell lekezelni logikával, nem a kiszervezett taskban (Application Code), mert az olyan, mintha minden jó lett volna.
 		Retry
 		Catch 
 	
 	Ha valami külső, vagy 3rd party resource válaszára várunk, arra a ".waitForTaskToken"-nel hivatkozhatunk (~Promise).
 	
 StepFunction is tud pollolni magának taskokat a GetActivityTask API-n keresztül.
 	Vagy meg tudja oldani a kapott feladatot: SendTaskSuccess
 	Vagy nem: SendTaskFailure
 	
 	  
 	
Step Functionöknek 2 fajtája van (Videó 418):
	
	Standard:
		Max.Duration: 1 év max
	
	
	
	
	Express:
		Max.Duration: 5 perc max.
		
		Lehet:
			Sync: Legfeljebb egyszer hogy megfut garantálva van
			Async Lagalább egyszer hogy megfut garantálva van
			
			
AppSync: GraphQL Schema resolver
	Honnan hozhat adatokat?
		DynamoDB
		Aurora
		OpenSearch
		Lambda -> Anything
		HTTP 
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	
	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
 	
