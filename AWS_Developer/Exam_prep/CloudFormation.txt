CloudFormation: provides you with an easy to use language and method to provision an entire infrastructure, including compute instances, databases, and load balancers at the click of a button.	
	AWS CloudFormation is a tool in order to create environments from a template, so it allows you to for example, you have this application you wanna deploy, it requires a few instances in EC2, it maybe it needs to be in its own VPC, it needs some Load Balancer, a DynamoDB table, things like that. 
	CloudFormation allows you to instantiate all of these things with a template all at once.
	AWS CloudFormation enables you to create and provision AWS infrastructure deployments predictably and repeatedly.
	Terms:
		Template: az environment leírása(Blueprint for the Stack h hogy nézzen ki) Json v YAML
		Stack: Collection of resources
		Change Set: its a plan h hogy fog kinézni az új instance a bevezetendő válzotások hatására.
		Stack set: in case of cross-region related operations, use a set of stacks
		
		AWS CloudTrail: ezzel lehet logolni a CloudFormation hívásokat.
			Ezekre adhat választ:
				Ki állította le az adott instance-t
				Ki változtatta meg a security group configját?
				Jön valamilyen kérés ismeretle IP címről?
				Milyen kérések lettek deny-olva permission-ök hiányában?	
		
		RevisionControl: A templatek history-ját manageli.

Resources - 
	Resources section describes the resources that you want to provision in your AWS CloudFormation stacks. You can associate conditions with the resources that you want to conditionally create.

Outputs - 
	The optional Outputs section declares output values that you can import into other stacks (to create cross-stack references), 
	return in response (to describe stack calls), or view on the AWS CloudFormation console. For example, you can output the S3 bucket name for a stack to make the bucket easier to find. 
	You can associate conditions with the outputs that you want to conditionally create.		
		
	
Parameters enable you to input custom values to your CloudFormation template each time you create or update a stack. 
		
The optional Conditions section contains statements that define the circumstances under which entities are created or configured.		
For example, you can create a Condition and then associate it with a resource or Output so that AWS CloudFormation only creates the resource or Output if the condition is true.		
		You might use conditions when you want to reuse a template that can create resources in different contexts, such as a test environment versus a production environment.
		
		A Parameters-ben nem lehet Condition blokk. Előbbkérjük be a paramétereket, és utána hasonlítgassuk a Conditions-ban. Pl. Dev-e a környezet?
		
		Miután minden Condition-t definiáltunk, csak azután használhatjuk a Resources ás Resource properties és Output section (blokk) -ökben.
		
		
		
Van a Conditions blokk. Ezen belül lehet létrehozni az előre gyártott Condition-okat (gyakorlatilag ide szervezzük ki őket).
	Conditions:
	  CreateProdResources: !Equals [ !Ref Environment, "prod" ]

Utána ha adott egy bizonyos Resource, akkor azon belül a Condition attribute-nál csak hivatkozni kell a Condition-ra.		
	Resources:
	  MyResource:
	    Type: AWS::Some::Resource
	    Condition: CreateProdResources
	    Properties:
	      ...
	      
Csak azután lehet használni egy Condition-t miután az összes már definiálva lett.

Condition csak Resources és Outputs- on belül lehet. Tehát a Paramaters-en belül nem.
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
